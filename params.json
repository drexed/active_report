{
  "name": "ActiveReport",
  "tagline": "Gem for exporting/importing ruby objects to flat files vice versa.",
  "body": "# ActiveReport\r\n\r\n[![Gem Version](https://badge.fury.io/rb/active_report.svg)](http://badge.fury.io/rb/active_report)\r\n[![Build Status](https://travis-ci.org/drexed/active_report.svg?branch=master)](https://travis-ci.org/drexed/active_report)\r\n[![Coverage Status](https://coveralls.io/repos/github/drexed/active_report/badge.svg?branch=master)](https://coveralls.io/github/drexed/active_report?branch=master)\r\n\r\nActiveReport is a library to export CSV's out of arrays, hashes, and records and vice versa.\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n```ruby\r\ngem \"active_report\"\r\n```\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install active_report\r\n\r\n## Table of Contents\r\n\r\n* [Configuration](#configuration)\r\n* [Array](#array)\r\n* [Hash](#hash)\r\n* [Record](#record)\r\n* [Evaluate](#evaluate)\r\n\r\n## Configuration\r\n\r\n`rails g active_report:install` will generate the following `active_report.rb` file:\r\n\r\n```ruby\r\n# config/initalizers/active_report.rb\r\n\r\nActiveReport.configure do |config|\r\n  # option = default\r\n\r\n  config.force_encoding = true\r\n  config.options = { encoding: \"UTF-8\" }\r\nend\r\n```\r\n\r\n## Array\r\n\r\n**Export:** Convert an array or array of arrays to a CSV.\r\n\r\n**Options:**\r\n * headers: column titles of CSV data\r\n * options: CSV options to be use on generation\r\n\r\n```ruby\r\n@list = [\r\n  [1, \"Lorem lipsum etc...\", true],\r\n  [2, \"Xorem lipsum etc...\", false],\r\n  [3, \"Porem lipsum etc...\", true]\r\n]\r\n\r\nActiveReport::Array.export(@list)\r\nActiveReport::Array.export(@list, headers: [\"ID\", \"Task\", \"Completed\"], options: { col_sep: \";\" })\r\n```\r\n\r\n**Import:** Convert a CSV into an array or array of arrays.\r\n\r\n**Options:**\r\n * headers: column titles of array data\r\n * options: CSV options to be use on parsing\r\n\r\n```ruby\r\nActiveReport::Array.import(\"sample.csv\")\r\nActiveReport::Array.import(\"sample.csv\", headers: [\"ID\", \"Task\", \"Completed\"], options: { col_sep: \";\" })\r\n```\r\n\r\n## Hash\r\n\r\n**Export:** Convert a hash or an array of hashes to a CSV.\r\n\r\n**Options:**\r\n * only:    keys of pairs to be used on generation\r\n * except:  keys of pairs not to be used on generation\r\n * headers: column titles of CSV data\r\n * options: CSV options to be use on generation\r\n\r\n```ruby\r\n@list = [\r\n  { id: 1, item: \"Lorem lipsum etc...\", completed: true},\r\n  { id: 2, item: \"Xorem lipsum etc...\", completed: false},\r\n  { id: 3, item: \"Porem lipsum etc...\", completed: true}\r\n]\r\n\r\nActiveReport::Hash.export(@list)\r\nActiveReport::Hash.export(@list, only: [:id, :item], headers: [\"ID\", \"Task\"], options: { col_sep: \";\" })\r\n```\r\n\r\n**Import:** Convert a CSV into an array of hashes.\r\n\r\n**Options:**\r\n * only:    keys of pairs to be used on generation\r\n * except:  keys of pairs not to be used on generation\r\n * headers: column titles of CSV data **Required**\r\n * options: CSV options to be use on parsing\r\n\r\n```ruby\r\nActiveReport::Hash.import(\"sample.csv\")\r\nActiveReport::Hash.import(\"sample.csv\", except: :completed, headers: [\"ID\", \"Task\"], options: { col_sep: \";\" })\r\n```\r\n\r\n## Record\r\n\r\n**Export:** Convert an ActiveRecord/Relation object(s) to a CSV.\r\n\r\n**Options:**\r\n * only:    columns to be used on generation\r\n * except:  columns not to be used on generation\r\n * headers: column titles of CSV data\r\n * options: CSV options to be use on generation\r\n\r\n```ruby\r\n@list = [\r\n  <# ActiveRecord::Relation Object >,\r\n  <# ActiveRecord::Relation Object >,\r\n  <# ActiveRecord::Relation Object >\r\n]\r\n\r\nActiveReport::Record.export(@list)\r\nActiveReport::Record.export(@list, only: [:id, :item], headers: [\"ID\", \"Task\"], options: { col_sep: \";\" })\r\n```\r\n\r\n**Import:** Create new database records from a CSV.\r\n\r\n**Options:**\r\n * model:   model of objects being generated\r\n * only:    keys of pairs to be used on generation\r\n * except:  keys of pairs not to be used on generation\r\n * headers: column titles of CSV data **Required**\r\n * options: CSV options to be use on parsing\r\n\r\n```ruby\r\nActiveReport::Record.import(\"sample.csv\", model: User)\r\nActiveReport::Record.import(\"sample.csv\", model: User, except: :completed, headers: [\"ID\", \"Task\"], options: { col_sep: \";\" })\r\n```\r\n\r\n## Evaluate\r\n\r\n**Array/Hash:** Convert the import of a array or hash to proper ruby objects.\r\n\r\n```ruby\r\nActiveReport::Hash.evaluate.import(\"sample.csv\")\r\n```\r\n\r\n## Contributing\r\n\r\nYour contribution is welcome.\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Added some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}